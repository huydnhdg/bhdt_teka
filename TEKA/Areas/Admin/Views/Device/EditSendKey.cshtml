@model TEKA.Models.DeviceSendKey
@{
    ViewBag.Title = "Accessary";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
    List<TEKA.Models.Device> device = (List<TEKA.Models.Device>)TempData["device"];
    List<TEKA.Models.AspNetUser> key = (List<TEKA.Models.AspNetUser>)TempData["key"];
}

@section scripts{
    <script>
        function getprice() {
            var id = $("#IdDevice").val();
            var quantity = $("#Quantity").val();
            $.ajax({
                url: '/Admin/Device/getprice',
                type: 'POST',
                datatype: 'application/json',
                contentType: 'application/json',
                data: JSON.stringify({
                    id: id
                }),
                success: function (result) {
                    var ob = $.parseJSON(result);
                    $("#Price").val(ob.Price);
                    if (quantity <= 0) {
                        quantity = 1;
                        $("#Quantity").val(quantity);
                        var amount = ob.Price * quantity;
                        $("#Amount").val(amount);
                    } else {
                        var amount = ob.Price * quantity;
                        $("#Amount").val(amount);
                    }


                },
                error: function () {
                },
            });
        }

        function changequantity() {
            var price = $("#Price").val();
            var quantity = $("#Quantity").val();
            alert(price * quantity);
            if (quantity <= 0) {
                quantity = 1;
                var amount = price * quantity;
                $("#Amount").val(amount);
            } else {
                var amount = price * quantity;
                $("#Amount").val(amount);
            }
        }
    </script>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>DeviceSendKey</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.IdDevice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.IdDevice, new SelectList(device, "Id", "Code"),
               new { @class = "form-control", @onchange = "getprice()" })
                @Html.ValidationMessageFor(model => model.IdDevice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdKey, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.IdKey, new SelectList(key, "Id", "UserName"),
               new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdKey, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new
                {
                    htmlAttributes = new
                    {
                        @class = "form-control",
               onchange = "changequantity()"
                    }
                })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group hidden">
            @Html.LabelFor(model => model.Createdate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Createdate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Createdate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group hidden">
            @Html.LabelFor(model => model.Createby, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Createby, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Createby, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
