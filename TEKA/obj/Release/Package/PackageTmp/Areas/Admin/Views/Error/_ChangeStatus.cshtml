@model TEKA.Models.Warranti
@{

}
<style>
    select.form-control {
        width: 280px;
    }
</style>
@using (Html.BeginForm("Change", "Error"))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4 class="text-center">Đổi trạng thái phiếu @Model.Id</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group hidden ">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group hidden ">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group hidden ">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group hidden ">
            <label class="control-label col-md-2">Serial</label>
            <div class="col-md-10">
                <input class="form-control" id="serial" onchange="getIdProduct()" />
            </div>
        </div>

        <div class="form-group hidden ">
            @Html.LabelFor(model => model.IdProduct, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IdProduct, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IdProduct, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group hidden ">
            @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Status,
                          new List<SelectListItem>
                            {
                            new SelectListItem { Value = "9" , Text = "Hủy bỏ" },
                            new SelectListItem { Value = "0" , Text = "Mới tiếp nhận" },
                            new SelectListItem { Value = "1" , Text = "Hoàn thành" },
                            new SelectListItem { Value = "2" , Text = "Chuyển trạm" },
                            new SelectListItem { Value = "3" , Text = "Trạm từ chối" },
                            new SelectListItem { Value = "5" , Text = "Đang xử lý" },
                            new SelectListItem { Value = "6" , Text = "Đem sản phẩm về trạm" },
                            new SelectListItem { Value = "7" , Text = "Đợi linh kiện" },
                            new SelectListItem { Value = "8" , Text = "Chờ phản hồi" },
                            },
                            new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group hidden">
            @Html.LabelFor(model => model.Createdate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Createdate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Createdate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group hidden">
            @Html.LabelFor(model => model.Chanel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Chanel, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Chanel, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="text-center">
                <button type="submit" class="btn btn-warning"><i class="glyphicon glyphicon-ok"></i> Lưu</button>
            </div>
        </div>

    </div>
}
